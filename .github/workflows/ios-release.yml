name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.24.4'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
          
       # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      # - name: Print Environment Info
      #   run: |
      #     echo "============= Environment Variables ============="
      #     echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
      #     FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
      #     echo "FLUTTER_ROOT: $FLUTTER_ROOT"
      #     echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
      #     echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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

          certificate-password: 123456
          
          provisioning-profile-base64: 


          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

#      - name: Upload to App Store using altool
#        env:
#          IPA_PATH: "build/ios/ipa/buzar.ipa"
#          APPLE_ID: "Summer2024DD@outlook.com"
#          APP_SPECIFIC_PASSWORD: "aezh-ujtl-kfwv-czma"
#        run: |
#          xcrun altool --upload-app -f "$IPA_PATH" \
#            -t ios \
#            -u "$APPLE_ID" \
#            -p "$APP_SPECIFIC_PASSWORD" \
#            --verbose
