name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.24.4'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
          
       # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      # - name: Print Environment Info
      #   run: |
      #     echo "============= Environment Variables ============="
      #     echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
      #     FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
      #     echo "FLUTTER_ROOT: $FLUTTER_ROOT"
      #     echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
      #     echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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

          certificate-password: 123456
          
          provisioning-profile-base64: MIIvrgYJKoZIhvcNAQcCoIIvnzCCL5sCAQExCzAJBgUrDgMCGgUAMIIfuwYJKoZIhvcNAQcBoIIfrASCH6g8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8IURPQ1RZUEUgcGxpc3QgUFVCTElDICItLy9BcHBsZS8vRFREIFBMSVNUIDEuMC8vRU4iICJodHRwOi8vd3d3LmFwcGxlLmNvbS9EVERzL1Byb3BlcnR5TGlzdC0xLjAuZHRkIj4KPHBsaXN0IHZlcnNpb249IjEuMCI+CjxkaWN0PgoJPGtleT5BcHBJRE5hbWU8L2tleT4KCTxzdHJpbmc+bm90aWZpY2F0aW9uc2VydmljZTwvc3RyaW5nPgoJPGtleT5BcHBsaWNhdGlvbklkZW50aWZpZXJQcmVmaXg8L2tleT4KCTxhcnJheT4KCTxzdHJpbmc+TUc4NzRMTDRVRjwvc3RyaW5nPgoJPC9hcnJheT4KCTxrZXk+Q3JlYXRpb25EYXRlPC9rZXk+Cgk8ZGF0ZT4yMDI0LTEyLTMxVDAzOjQ4OjIyWjwvZGF0ZT4KCTxrZXk+UGxhdGZvcm08L2tleT4KCTxhcnJheT4KCQk8c3RyaW5nPmlPUzwvc3RyaW5nPgoJCTxzdHJpbmc+eHJPUzwvc3RyaW5nPgoJCTxzdHJpbmc+dmlzaW9uT1M8L3N0cmluZz4KCTwvYXJyYXk+Cgk8a2V5PklzWGNvZGVNYW5hZ2VkPC9rZXk+Cgk8ZmFsc2UvPgoJPGtleT5EZXZlbG9wZXJDZXJ0aWZpY2F0ZXM8L2tleT4KCTxhcnJheT4KCQk8ZGF0YT5NSUlGdHpDQ0JKK2dBd0lCQWdJUWZ3bGR1YmF2ZjZhcGswZXZKM1pHM3pBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSTBNVEl6TVRBek1qWTBOMW9YRFRJMU1USXpNVEF6TWpZME5sb3dnWkl4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBOUnpnM05FeE1ORlZHTVRrd053WURWUVFERERCcFVHaHZibVVnUkdsemRISnBZblYwYVc5dU9pQjVhVzVuY1hWaGJpQjZhR0Z1WnlBb1RVYzROelJNVERSVlJpa3hFekFSQmdOVkJBc01DazFIT0RjMFRFdzBWVVl4RnpBVkJnTlZCQW9NRG5scGJtZHhkV0Z1SUhwb1lXNW5NUXN3Q1FZRFZRUUdFd0pWVXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURkQU5VR2F6QzdqeHRRSlNnTE80bjB3M3BlKzB6NjVWakhBdkJ4dXRxdm9ET1JHdkJRRlBBMGNzdzFsdEdjMUlIL29mb1ZKTkM0MDVLaEwrSXhSUFhXYWpkRDhOMVNnSWNuZVgyRzExRWtmeS9EK2pMWms2UkR6R0YxOVVNbzNHS05odlR6dUhMbzZRZWhsSktxNHdzc1hFTjExK3pBdElveXowM28vM1RpWS91bGQ3cGJIVlJuZnR5bnUwVjhsUzBTT3dhWFFtNVVpN0pHSTVPWmZyWTVKSmhxMGhsN3dadHRzN3RhT01YdGZ2dFpndU56NWtVdVhndHF5eHh0MGhxeDZ4TWFLaFZVbXg5d1ZwZURCeFVXdGJNME9lcGdtNytURXZaVWxqWjVBZUp6VEVOYTRmQ3Y0Y0V0WGlCOGQ3K1EvUUoxbndZWTFSNlQwMHNyanFNQ0F3RUFBYU9DQWlNd2dnSWZNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVDZjdBRlpENXIyUUtraEs1SmloakRKZnNwN0l3Y0FZSUt3WUJCUVVIQVFFRVpEQmlNQzBHQ0NzR0FRVUZCekFDaGlGb2RIUndPaTh2WTJWeWRITXVZWEJ3YkdVdVkyOXRMM2QzWkhKbk15NWtaWEl3TVFZSUt3WUJCUVVITUFHR0pXaDBkSEE2THk5dlkzTndMbUZ3Y0d4bExtTnZiUzl2WTNOd01ETXRkM2RrY21jek1ESXdnZ0VlQmdOVkhTQUVnZ0VWTUlJQkVUQ0NBUTBHQ1NxR1NJYjNZMlFGQVRDQi96Q0J3d1lJS3dZQkJRVUhBZ0l3Z2JZTWdiTlNaV3hwWVc1alpTQnZiaUIwYUdseklHTmxjblJwWm1sallYUmxJR0o1SUdGdWVTQndZWEowZVNCaGMzTjFiV1Z6SUdGalkyVndkR0Z1WTJVZ2IyWWdkR2hsSUhSb1pXNGdZWEJ3YkdsallXSnNaU0J6ZEdGdVpHRnlaQ0IwWlhKdGN5QmhibVFnWTI5dVpHbDBhVzl1Y3lCdlppQjFjMlVzSUdObGNuUnBabWxqWVhSbElIQnZiR2xqZVNCaGJtUWdZMlZ5ZEdsbWFXTmhkR2x2YmlCd2NtRmpkR2xqWlNCemRHRjBaVzFsYm5SekxqQTNCZ2dyQmdFRkJRY0NBUllyYUhSMGNITTZMeTkzZDNjdVlYQndiR1V1WTI5dEwyTmxjblJwWm1sallYUmxZWFYwYUc5eWFYUjVMekFXQmdOVkhTVUJBZjhFRERBS0JnZ3JCZ0VGQlFjREF6QWRCZ05WSFE0RUZnUVV6dVdjTXZIbTlQTVNicmJCMFVKanl1cEtkMnN3RGdZRFZSMFBBUUgvQkFRREFnZUFNQk1HQ2lxR1NJYjNZMlFHQVFRQkFmOEVBZ1VBTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFET2REQTQwdXlXb05lRHhsTG1MeVdVTlNIek0yeW1QOUlRdWFTbTZaN2JYOWlaTm9IMXZ5RUxkWnpMWWtjV2pFUVM5bHRlSmZ1cGdJNUR5UHJSZUtDSmpJOGplZ3crYjhxd0JrUzYrNGFmN1o2ZWxNQzFJdXJiMTgxd3JpY1pCb21iMlY0VlhqUXcwb3Y0TmRDcnBJYk9jcXNZMytvUEsrMDg5QWJ5RklTOEs4VUtBc0JZN0NyVWJXb0E2Mks5WGNTdDhtNFBNMEN1UTNRSzNIUmlaSnR2c1dGYWlVZ25pcEdTZHNjV0wrcjFsdTBmNjZvTDZOU21nNmJMLzd1c3NJbkEweGY0VjVDVjJBcUlRenVIcVROalN5WEhtK1VUMnpWL0RiK2tlNGdkcUxkU2NycUVyTE9KaVVSZTh3Vm1jMTBEbUFwTUVJeXEremJYNHB3UnNnZWg8L2RhdGE+Cgk8L2FycmF5PgoKCTxrZXk+REVSLUVuY29kZWQtUHJvZmlsZTwva2V5PgoJPGRhdGE+TUlJTlRRWUpLb1pJaHZjTkFRY0NvSUlOUGpDQ0RUb0NBUUV4RHpBTkJnbGdoa2dCWlFNRUFnRUZBRENDQXdZR0NTcUdTSWIzRFFFSEFhQ0NBdmNFZ2dMek1ZSUM3ekFNREFkV1pYSnphVzl1QWdFQk1BME1DRkJRVVVOb1pXTnJBUUVBTUJBTUNsUnBiV1ZVYjB4cGRtVUNBZ0ZzTUJNTURrbHpXR052WkdWTllXNWhaMlZrQVFFQU1Cb01DRlJsWVcxT1lXMWxEQTU1YVc1bmNYVmhiaUI2YUdGdVp6QWREQXhEY21WaGRHbHZia1JoZEdVWERUSTBNVEl6TVRBek5EZ3lNbG93SGd3T1ZHVmhiVWxrWlc1MGFXWnBaWEl3REF3S1RVYzROelJNVERSVlJqQWZEQTVGZUhCcGNtRjBhVzl1UkdGMFpSY05NalV4TWpNeE1ETXlOalEyV2pBZ0RBbEJjSEJKUkU1aGJXVU1FMjV2ZEdsbWFXTmhkR2x2Ym5ObGNuWnBZMlV3SUF3WFVISnZabWxzWlVScGMzUnlhV0oxZEdsdmJsUjVjR1VNQlZOVVQxSkZNQ0VNQ0ZCc1lYUm1iM0p0TUJVTUEybFBVd3dFZUhKUFV3d0lkbWx6YVc5dVQxTXdLZ3dFVG1GdFpRd2lhVzl6TG1KMWVucHlkR1ZoYlM1cGIzTXVZWEJ1WDJScGMxOHlNREkwTVRJek1UQXJEQnRCY0hCc2FXTmhkR2x2Ymtsa1pXNTBhV1pwWlhKUWNtVm1hWGd3REF3S1RVYzROelJNVERSVlJqQXNEQVJWVlVsRURDUTBZMlExWmpVMFpDMDRaalJrTFRSaVltRXRPR1EzTkMwME9EVmhNakF6WXpNek56SXdPd3dWUkdWMlpXeHZjR1Z5UTJWeWRHbG1hV05oZEdWek1DSUVJS0hmaEJ1SzEvczE4NzZETG1xWUw1V0U1YWVWRXYxQlBDbFRSMXF2UUwxek1JSUJBQXdNUlc1MGFYUnNaVzFsYm5SemNJSHZBZ0VCc0lIcE1Fb01GbUZ3Y0d4cFkyRjBhVzl1TFdsa1pXNTBhV1pwWlhJTU1FMUhPRGMwVEV3MFZVWXVZMjl0TG1KMWVucHlkR1ZoYlM1cGIzTXVibTkwYVdacFkyRjBhVzl1YzJWeWRtbGpaVEFZREJOaVpYUmhMWEpsY0c5eWRITXRZV04wYVhabEFRSC9NREVNSTJOdmJTNWhjSEJzWlM1a1pYWmxiRzl3WlhJdWRHVmhiUzFwWkdWdWRHbG1hV1Z5REFwTlJ6ZzNORXhNTkZWR01CTU1EbWRsZEMxMFlYTnJMV0ZzYkc5M0FRRUFNRGtNRm10bGVXTm9ZV2x1TFdGalkyVnpjeTFuY205MWNITXdId3dNVFVjNE56Uk1URFJWUmk0cURBOWpiMjB1WVhCd2JHVXVkRzlyWlc2Z2dnZzhNSUlDUXpDQ0FjbWdBd0lCQWdJSUxjWDhpTkxGUzVVd0NnWUlLb1pJemowRUF3TXdaekViTUJrR0ExVUVBd3dTUVhCd2JHVWdVbTl2ZENCRFFTQXRJRWN6TVNZd0pBWURWUVFMREIxQmNIQnNaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVURVRNQkVHQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVMTUFrR0ExVUVCaE1DVlZNd0hoY05NVFF3TkRNd01UZ3hPVEEyV2hjTk16a3dORE13TVRneE9UQTJXakJuTVJzd0dRWURWUVFEREJKQmNIQnNaU0JTYjI5MElFTkJJQzBnUnpNeEpqQWtCZ05WQkFzTUhVRndjR3hsSUVObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUjVNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVFzd0NRWURWUVFHRXdKVlV6QjJNQkFHQnlxR1NNNDlBZ0VHQlN1QkJBQWlBMklBQkpqcEx6MUFjcVR0a3lKeWdSTWMzUkNWOGNXalRuSGNGQmJaRHVXbUJTcDNaSHRmVGpqVHV4eEV0WC8xSDdZeVlsM0o2WVJiVHpCUEVWb0EvVmhZREtYMUR5eE5CMGNUZGRxWGw1ZHZNVnp0SzUxN0lEdll1VlRaWHBta09sRUtNYU5DTUVBd0hRWURWUjBPQkJZRUZMdXczcUZZTTRpYXBJcVozcjY5NjYvYXl5U3JNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01Bb0dDQ3FHU000OUJBTURBMmdBTUdVQ01RQ0Q2Y0hFRmw0YVhUUVkyZTN2OUd3T0FFWkx1Tit5UmhIRkQvM21lb3locG12T3dnUFVuUFdUeG5TNGF0K3FJeFVDTUcxbWloREsxQTNVVDgyTlF6NjBpbU9sTTI3amJkb1h0MlFmeUZNbStZaGlkRGtMRjF2TFVhZ002QmdENTZLeUtEQ0NBdVl3Z2dKdG9BTUNBUUlDQ0RNTjd2aS9UR2d1TUFvR0NDcUdTTTQ5QkFNRE1HY3hHekFaQmdOVkJBTU1Fa0Z3Y0d4bElGSnZiM1FnUTBFZ0xTQkhNekVtTUNRR0ExVUVDd3dkUVhCd2JHVWdRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEhreEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERURTNNREl5TWpJeU1qTXlNbG9YRFRNeU1ESXhPREF3TURBd01Gb3djakVtTUNRR0ExVUVBd3dkUVhCd2JHVWdVM2x6ZEdWdElFbHVkR1ZuY21GMGFXOXVJRU5CSURReEpqQWtCZ05WQkFzTUhVRndjR3hsSUVObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUjVNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVFzd0NRWURWUVFHRXdKVlV6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJBWnJwRlp2Zlo4bjBjNDJqcEliVnMxVU5tUkt5WlJvbWZySklIN2k5VmdQM09KcTZ4bEhMeTd2TzZRQnRBRVRSSHhhSnEyZ25Da2xpdVhtQm05UGZGcWpnZmN3Z2ZRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZkJnTlZIU01FR0RBV2dCUzdzTjZoV0RPSW1xU0ttZDYrdmV1djJzc2txekJHQmdnckJnRUZCUWNCQVFRNk1EZ3dOZ1lJS3dZQkJRVUhNQUdHS21oMGRIQTZMeTl2WTNOd0xtRndjR3hsTG1OdmJTOXZZM053TURNdFlYQndiR1Z5YjI5MFkyRm5NekEzQmdOVkhSOEVNREF1TUN5Z0txQW9oaVpvZEhSd09pOHZZM0pzTG1Gd2NHeGxMbU52YlM5aGNIQnNaWEp2YjNSallXY3pMbU55YkRBZEJnTlZIUTRFRmdRVWVrZTZPSW9WSkVnaVJzMitqeG9rZXpRREtta3dEZ1lEVlIwUEFRSC9CQVFEQWdFR01CQUdDaXFHU0liM1kyUUdBaEVFQWdVQU1Bb0dDQ3FHU000OUJBTURBMmNBTUdRQ01CVU1xWTdHcjVacGE2ZWYzVnpVQTFsc3JsTFVZTWFMZHVDM3hhTHhDWHpnbXVOcnNlTjhNY1FuZXFlT2lmMnJkd0l3WVRNZzhTbi8rWWN5cmluSVpEMTJlMUdrMGdJdmRyNWdJcEh4MVRwMTNMVGl4aXFXL3NZSjNFcFAxU1R3L01xeU1JSURCekNDQXEyZ0F3SUJBZ0lJWEswbUpCTVlCYjh3Q2dZSUtvWkl6ajBFQXdJd2NqRW1NQ1FHQTFVRUF3d2RRWEJ3YkdVZ1UzbHpkR1Z0SUVsdWRHVm5jbUYwYVc5dUlFTkJJRFF4SmpBa0JnTlZCQXNNSFVGd2NHeGxJRU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5YVhSNU1STXdFUVlEVlFRS0RBcEJjSEJzWlNCSmJtTXVNUXN3Q1FZRFZRUUdFd0pWVXpBZUZ3MHlOREF4TWpreE5qUTNNRFJhRncweU9EQXlNamN4TmpRM01ETmFNRTR4S2pBb0JnTlZCQU1NSVZkWFJGSWdVSEp2ZG1semFXOXVhVzVuSUZCeWIyWnBiR1VnVTJsbmJtbHVaekVUTUJFR0ExVUVDZ3dLUVhCd2JHVWdTVzVqTGpFTE1Ba0dBMVVFQmhNQ1ZWTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBVEVEaFBEejY3eEVDOSs5VlRiVkd1RUJ4L2o1aWNRcUhWV2lsVDVBYTUvSThVU2dIQUw3MnVNTDdPcERuMEJXZ3RLTllBYUdBaGJsbnNxWlFmejR0NUVvNElCVHpDQ0FVc3dEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUjZSN280aWhVa1NDSkd6YjZQR2lSN05BTXFhVEJCQmdnckJnRUZCUWNCQVFRMU1ETXdNUVlJS3dZQkJRVUhNQUdHSldoMGRIQTZMeTl2WTNOd0xtRndjR3hsTG1OdmJTOXZZM053TURNdFlYTnBZMkUwTURNd2daWUdBMVVkSUFTQmpqQ0JpekNCaUFZSktvWklodmRqWkFVQk1Ic3dlUVlJS3dZQkJRVUhBZ0l3YlF4clZHaHBjeUJqWlhKMGFXWnBZMkYwWlNCcGN5QjBieUJpWlNCMWMyVmtJR1Y0WTJ4MWMybDJaV3g1SUdadmNpQm1kVzVqZEdsdmJuTWdhVzUwWlhKdVlXd2dkRzhnUVhCd2JHVWdVSEp2WkhWamRITWdZVzVrTDI5eUlFRndjR3hsSUhCeWIyTmxjM05sY3k0d0hRWURWUjBPQkJZRUZHdi9YUU9UdXZIRjRyajBDamJNMUVDTDhYd2VNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVBCZ2txaGtpRzkyTmtEQk1FQWdVQU1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lIZXpiNWpWbHdSTWRXY3pPOUpBSjFJcnRTTjVmVEg3ZkgxWFdXdWVPZExaQWlFQTd4UjhoTG1DUlNWckhpRmhkK2QyekR3d0k1ZjJvZ2NEUURyT0V2R2REUzB4Z2dIWU1JSUIxQUlCQVRCK01ISXhKakFrQmdOVkJBTU1IVUZ3Y0d4bElGTjVjM1JsYlNCSmJuUmxaM0poZEdsdmJpQkRRU0EwTVNZd0pBWURWUVFMREIxQmNIQnNaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVURVRNQkVHQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVMTUFrR0ExVUVCaE1DVlZNQ0NGeXRKaVFUR0FXL01BMEdDV0NHU0FGbEF3UUNBUVVBb0lIcE1CZ0dDU3FHU0liM0RRRUpBekVMQmdrcWhraUc5dzBCQndFd0hBWUpLb1pJaHZjTkFRa0ZNUThYRFRJME1USXpNVEF6TkRneU1sb3dLZ1lKS29aSWh2Y05BUWswTVIwd0d6QU5CZ2xnaGtnQlpRTUVBZ0VGQUtFS0JnZ3Foa2pPUFFRREFqQXZCZ2txaGtpRzl3MEJDUVF4SWdRZ2ZZWkZiRVFZTnNuNSthcmJNRGFMem1sRHk2S0NtczNDMDFNbk5zVlp0K1F3VWdZSktvWklodmNOQVFrUE1VVXdRekFLQmdncWhraUc5dzBEQnpBT0JnZ3Foa2lHOXcwREFnSUNBSUF3RFFZSUtvWklodmNOQXdJQ0FVQXdCd1lGS3c0REFnY3dEUVlJS29aSWh2Y05Bd0lDQVNnd0NnWUlLb1pJemowRUF3SUVTREJHQWlFQStkdHd0N05CbEVXZkZBSjd5YjNmZlpqeVViSkF1Q0xJVVRHcm1ybmc0YXNDSVFDUWRQRTJ2MmNYeUwxeFB5T24wNm12eUNoY25icHJCL21sSnBkWDFXOU92QT09PC9kYXRhPgoJCQkJCQkJCQkJCQkKCQkJPGtleT5QUFFDaGVjazwva2V5PgoJPGZhbHNlLz4KCgk8a2V5PkVudGl0bGVtZW50czwva2V5PgoJPGRpY3Q+CgkJPGtleT5iZXRhLXJlcG9ydHMtYWN0aXZlPC9rZXk+CgkJPHRydWUvPgoJCQkJCgkJCQk8a2V5PmFwcGxpY2F0aW9uLWlkZW50aWZpZXI8L2tleT4KCQk8c3RyaW5nPk1HODc0TEw0VUYuY29tLmJ1enpydGVhbS5pb3Mubm90aWZpY2F0aW9uc2VydmljZTwvc3RyaW5nPgoJCQkJCgkJCQk8a2V5PmtleWNoYWluLWFjY2Vzcy1ncm91cHM8L2tleT4KCQk8YXJyYXk+CgkJCQk8c3RyaW5nPk1HODc0TEw0VUYuKjwvc3RyaW5nPgoJCQkJPHN0cmluZz5jb20uYXBwbGUudG9rZW48L3N0cmluZz4KCQk8L2FycmF5PgoJCQkJCgkJCQk8a2V5PmdldC10YXNrLWFsbG93PC9rZXk+CgkJPGZhbHNlLz4KCQkJCQoJCQkJPGtleT5jb20uYXBwbGUuZGV2ZWxvcGVyLnRlYW0taWRlbnRpZmllcjwva2V5PgoJCTxzdHJpbmc+TUc4NzRMTDRVRjwvc3RyaW5nPgoJCQoJPC9kaWN0PgoJPGtleT5FeHBpcmF0aW9uRGF0ZTwva2V5PgoJPGRhdGU+MjAyNS0xMi0zMVQwMzoyNjo0Nlo8L2RhdGU+Cgk8a2V5Pk5hbWU8L2tleT4KCTxzdHJpbmc+aW9zLmJ1enpydGVhbS5pb3MuYXBuX2Rpc18yMDI0MTIzMTwvc3RyaW5nPgoJPGtleT5UZWFtSWRlbnRpZmllcjwva2V5PgoJPGFycmF5PgoJCTxzdHJpbmc+TUc4NzRMTDRVRjwvc3RyaW5nPgoJPC9hcnJheT4KCTxrZXk+VGVhbU5hbWU8L2tleT4KCTxzdHJpbmc+eWluZ3F1YW4gemhhbmc8L3N0cmluZz4KCTxrZXk+VGltZVRvTGl2ZTwva2V5PgoJPGludGVnZXI+MzY0PC9pbnRlZ2VyPgoJPGtleT5VVUlEPC9rZXk+Cgk8c3RyaW5nPjRjZDVmNTRkLThmNGQtNGJiYS04ZDc0LTQ4NWEyMDNjMzM3Mjwv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

          keychain-password: 111111

      # # 添加检查步骤
      # - name: 检查构建文件
      #   run: |
      #     echo "检查 build/ios/ipa 目录内容："
      #     ls -la build/ios/ipa/
      #     echo "检查 build/ios 目录内容："
      #     ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/buzar.ipa"
          APPLE_ID: "Summer2024DD@outlook.com"
          APP_SPECIFIC_PASSWORD: "xxx"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
